name: Deploy to Production

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '12.16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - uses: actions/upload-artifact@v1
        with:
          name: dist-files
          path: dist

  deploy:
    needs: [ build ]
    runs-on: ubuntu-18.04

    steps:
      - name: Set up SSH
        run: |
          mkdir -pv ~/.ssh
          echo ${{ secrets.KNOWN_HOSTS }} | base64 --decode > ~/.ssh/known_hosts
          (umask 077; echo ${{ secrets.DEPLOY_PRIVATE_KEY }} | base64 --decode > ~/.ssh/id_rsa)

      - name: Connect to server and get files from Github
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} "echo \"Start deploy...\";
            mkdir -pv ${{ secrets.SITE_PATH }};
            cd ${{ secrets.SITE_PATH }};
            git init;
            git config remote.origin.url >&- || git remote add origin git@github.com:vtimbuc/vtimbuc.git;
            git fetch --verbose --depth=1;
            git reset --hard origin/master;
          "

      - uses: actions/download-artifact@v1
        with:
          name: dist-files
          path: artifacts/dist

      - name: Deploy dist files
        run: |
          scp -r artifacts/dist ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }}:${{ secrets.SITE_PATH }}
